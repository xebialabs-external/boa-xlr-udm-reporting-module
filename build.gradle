buildscript {
    repositories {
        mavenLocal()
        ["public", "thirdparty", "releases"].each { r ->
            maven {
                credentials {
                    username nexusUserName
                    password nexusPassword
                }
                url "${nexusBaseUrl}/repositories/${r}"
            }
        }
    }

    dependencies {
        classpath "com.xebialabs.gradle.plugins.xlrelease:gradle-xl-release-plugin-plugin:0.2.6"
        classpath "com.xebialabs.gradle.plugins:gradle-xl-plugins-plugin:1.3.18"
        classpath "com.github.node-gradle:gradle-node-plugin:2.2.4"
    }
}

plugins {
    // id "com.github.hierynomus.license" version "0.14.0"
    id "com.xebialabs.xl.docker" version "1.1.0"
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

apply plugin: 'com.xebialabs.xl-release.plugin'
apply plugin: 'xebialabs.root.opinions'
apply plugin: 'xebialabs.opinions'
apply plugin: 'com.xebialabs.dependency'
apply plugin: 'com.github.node-gradle.node'

group 'com.xebialabs.xlrelease.plugins'
version = '0.6.0'

def distName = "xl-release"
def xlrBase = "xl-release-server"

configurations {
    xlrDist
}

xlReleasePlugin {
    useSourcesDirectly = false
    xlReleaseHome = "${buildDir}/${xlrBase}/${distName}-${xlReleaseVersion}-server"
}

xlDocker {
    compileImage = 'xebialabs/xlr_dev_compile'
    compileVersion = 'v7.0.1.1'
    runImage = 'xebialabs/xlr_dev_run'
    runVersion = 'v7.0.1.1'
    runPortMapping = '15516:5516'
}

dependencyManagement {
    importConf "com.xebialabs.xl-platform:xl-reference:${xlPlatformVersion}"
    importConf rootProject.file('gradle/dependencies.conf')
}

dependencies {
    compile fileTree(dir: "${xlReleasePlugin.xlReleaseHome}/lib", includes: ['*.jar'])
    xlrDist "com.xebialabs.xlrelease:${distName}-base:${xlReleaseVersion}:server@zip"
    implementation "org.scala-lang:scala-library"
}

node {
    version = '16.13.2'
    yarnVersion = '1.22.19'
    download = true
    nodeModulesDir = file("${rootProject.projectDir}")
}

sourceSets {
    // js are processed by webpack
    main {
        resources {
            exclude '**/*.js'
        }
    }
}

task yarnRunBuild(type: YarnTask) {
    args = ['run', 'build']
}

yarnRunBuild.dependsOn yarn_install
processResources.dependsOn yarnRunBuild

task unzipDist(type: Copy) {
    from zipTree(file("${buildDir}/${xlrBase}/${distName}-base-${xlReleaseVersion}-server.zip"))
    into file("${buildDir}/${xlrBase}")
}

task copyXlrDist(type: Copy) {
    from configurations.xlrDist
    into file("${buildDir}/${xlrBase}")
}

unzipDist.dependsOn copyXlrDist
compileJava.dependsOn unzipDist
compileScala.dependsOn unzipDist
